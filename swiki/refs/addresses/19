"Create a new page"| newPage scheme type |(request fieldsHasKey: 'name')	ifTrue: [(book hasPageNamed: (request fieldsKey: 'name'))		ifTrue: [response at: 'headerStatus' put: #notFound.			book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]		ifFalse: ["Add New Page"			newPage _ book addNewPage.			newPage				forbidWriting;				date: Date today;				time: Time now;				nameUnique: (request fieldsKey: 'name') book: book;				user: 'unknown'.			type _ request fieldsKey: 'type' ifAbsent: ['text-default'].			(book formatPrivAddress: 'allSchemes' request: request response: response shelf: shelf) do: [:i | ((i at: 1) = (page settingsAt: 'scheme' ifAbsent: ['default'])) ifTrue: [scheme _ i]].			((scheme at: 4) = 'default') ifFalse: [newPage settingsAt: 'scheme' put: (scheme at: 4)].			(type beginsWith: 'text-')				ifTrue: [(type = 'text-default')					ifTrue: [newPage text: (book formatPageTemplate: 'newText' request: request response: response shelf: shelf page: newPage)]					ifFalse: [newPage						text: '';						settingsAt: 'template' put: (type copyFrom: 6 to: type size)]]				ifFalse: [					newPage						text: '';						settingsAt: 'isText' put: false.					(type = 'project-default') ifFalse: [newPage						settingsAt: 'template' put: (type copyFrom: 9 to: type size)]].			[newPage				user: (shelf formatPrivAddress: 'getIPName' request: request response: response);				write;				permitWriting] fork.			(page settingsAt: 'isText' ifAbsent: [true]) ifTrue: [[page				forbidWriting;			 	updateFormatRequest: request response: response shelf: shelf book: book;				permitWriting] fork].			response at: 'headerStatus' put: #tempMoved.			(newPage settingsAt: 'isText' ifAbsent: [true])				ifTrue: [response at: 'location' put: (request referenceShelf: shelf book: book page: newPage address: 'edit')]				ifFalse: [response at: 'location' put: (request referenceShelf: shelf book: book page: newPage)].			book formatPageTemplate: 'newSuccess' request: request response: response shelf: shelf page: newPage]]	ifFalse: [response at: 'headerStatus' put: #notFound.		book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]
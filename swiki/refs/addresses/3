| hasMatch |(request fieldsHasKey: 'search')	ifTrue: ["Decrement process priority since it is a search"		Processor activeProcess priority: SwikiModule searchPriority.
		response at: 'connection' put: 'close'.		[:stream |			"Put Beginning"			stream nextPutAll: (book formatBookTemplate: 'foundBefore' request: request response: response shelf: shelf).			stream flush.			"Put Results"			hasMatch _ false.			book searchFor: (request fieldsKey: 'search') caseSensitive: (request fieldsAsBooleanKey: 'casesensitive') and: (request fieldsAsBooleanKey: 'and') matchBlock: [:page |				hasMatch ifFalse: [					hasMatch _ true.					stream nextPutAll: (book formatBookTemplate: 'foundMatch' request: request response: response shelf: shelf).					stream nextPutAll: '<ul>', String crlf].				stream nextPutAll: (book formatPageTemplate: 'searchListing' request: request response: response shelf: shelf page: page).				stream flush].			hasMatch				ifTrue: [stream nextPutAll: '</ul>', String crlf]				ifFalse: [stream nextPutAll: (book formatBookTemplate: 'foundNoMatch' request: request response: response shelf: shelf)].			"Put End"			stream nextPutAll: (book formatBookTemplate: 'foundAfter' request: request response: response shelf: shelf)]]	ifFalse: [book formatBookTemplate: 'search' request: request response: response shelf: shelf]
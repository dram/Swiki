"Make sure that the inlined page isn't self referential"| options pageOption return test |options _ request settingsAt: 'options'.(pageOption _ options at: 'page' ifAbsent: [nil])	ifNil: ['<b>Inline function must have a <em>page</em> field.</b>']	ifNotNil: [		"Try to establish a page from the page name"		pageOption _ pageOption isAllDigits			ifTrue: [book pages at: (pageOption asNumber) ifAbsent: [nil]]			ifFalse: [book pageNamed: pageOption].		pageOption			ifNil: ['<b>Page <em>', (TextFormatter encodeToXmlCrlf: (options at: 'page')), '</em> does not exist.</b>']			ifNotNil: [				"Stop this page from being inlined"				test _ 'inline-', (page id asString).				request settingsAt: test put: true.				"Check for circular inlining"				return _ (request settingsAt: ('inline-', (pageOption id asString)) ifAbsent: [false])					ifTrue: ['<b>OOPS! This page tries to inline itself.</b>']					ifFalse: [book formatPageTemplate: 'inlinePage' request: request response: response shelf: shelf page: pageOption].				request settingsAt: test put: false.				return]]
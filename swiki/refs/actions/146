| return colorScheme |return _ WriteStream on: (String new: 300).colorScheme _ book modulesAt: 'colorScheme'."Page Buttons"return nextPutAll: ((request address = 'default')	ifTrue: [colorScheme button: 'viewie']	ifFalse: [colorScheme button: 'view' link: (request referenceShelf: shelf book: book page: page)]).return nextPutAll: ((request address = 'edit')	ifTrue: [(page settingsAt: 'lock' ifAbsent: [false])		ifTrue: [colorScheme button: 'editlockie']		ifFalse: [colorScheme button: 'editie']]	ifFalse: [(page settingsAt: 'isText' ifAbsent: [true])		ifTrue: [(page settingsAt: 'lock' ifAbsent: [false])			ifTrue: [colorScheme button: 'editlock' link: (request referenceShelf: shelf book: book page: page address: 'edit')]			ifFalse: [colorScheme button: 'edit' link: (request referenceShelf: shelf book: book page: page address: 'edit')]]		ifFalse: [colorScheme button: 'editbw']]).return nextPutAll: ((request address = 'upload')	ifTrue: [colorScheme button: 'uploadie']	ifFalse: [colorScheme button: 'upload' link: (request referenceShelf: shelf book: book page: page address: 'upload')]).return nextPutAll: ((request address = 'history')	ifTrue: [colorScheme button: 'historyie']	ifFalse: [colorScheme button: 'history' link: (request referenceShelf: shelf book: book page: page address: 'history')])."Divider"return nextPutAll: (colorScheme formatTemplate: 'divider' request: request response: response shelf: shelf book: book)."Book Buttons"return nextPutAll: ((page id = 1)	ifTrue: [colorScheme button: 'topie']	ifFalse: [colorScheme button: 'top' link: (request referenceShelf: shelf book: book)]).return nextPutAll: (colorScheme button: 'recent' link: (request referenceShelf: shelf book: book address: 'recent')).return nextPutAll: (colorScheme button: 'search' link: (request referenceShelf: shelf book: book address: 'search')).return nextPutAll: (colorScheme button: 'help' link: (request referenceShelf: shelf book: book address: 'help'))."Return Contents"return contents
| myForm allProjectForms return |myForm _ (page settingsAt: 'isText' ifAbsent: [true])	ifTrue: [nil]	ifFalse: [page settingsAt: 'template' ifAbsent: [nil]].allProjectForms _ (book formatPrivAddress: 'allProjectForms' request: request response: response shelf: shelf) asSortedCollection: [:a :b | (a asLowercase) < (b asLowercase)].return _ WriteStream on: String new.(allProjectForms size = 0) ifFalse: [	return		nextPutAll: '<tr><td><i>Edit Project Form Named...</i></td><td align=right><form action="';		nextPutAll: (book formatPageAction: 'toEditProjectForm' request: request response: response shelf: shelf page: page);		nextPutAll: '"><select name="form">'.	allProjectForms do: [:form | return		nextPutAll: '<option value="';		nextPutAll: (TextFormatter encodeToStrictXmlCrlf: form);		nextPutAll: ((form = myForm)			ifTrue: ['" selected>']			ifFalse: ['">']);		nextPutAll: (TextFormatter encodeToXmlCrlf: form);		nextPutAll: String crlf].	return		nextPutAll: '</select>&nbsp;<input type="submit" value="edit"></form></td></tr>';		nextPutAll: String crlf].return contents
| options days max min testDate sortedPages item test selectedPages return noDate noTime bgColor |"Establish days, max, min, noDate, noTime"options _ request settingsAt: 'options'.days _ (options includesKey: 'days')	ifTrue: [(options at: 'days') isAllDigits ifTrue: [(options at: 'days') asNumber] ifFalse: [8]]	ifFalse: [8].max _ (options includesKey: 'max')	ifTrue: [(options at: 'max') isAllDigits ifTrue: [(options at: 'max') asNumber] ifFalse: [30]]	ifFalse: [30].min _ (options includesKey: 'min')	ifTrue: [(options at: 'min') isAllDigits ifTrue: [(options at: 'min') asNumber] ifFalse: [5]]	ifFalse: [5].(min = 0) ifTrue: [min _ 1].(max < min) ifTrue: [min _ max].noDate _ options includesKey: 'nodate'.noTime _ noDate	ifTrue: [true]	ifFalse: [options includesKey: 'notime'].sortedPages _ (book pages asSortedCollection: [:x :y | (x date = y date) ifTrue: [x time > y time] ifFalse: [x date > y date]]) asOrderedCollection.testDate _ Date today subtractDays: days.item _ 1.[(test _ sortedPages at: item ifAbsent: [nil])	ifNil: [false]	ifNotNil: [test date > testDate]] whileTrue: [item _ item + 1].item _ item - 1.(item < min)	ifTrue: [(sortedPages size < min)		ifTrue: [selectedPages _ sortedPages]		ifFalse: [selectedPages _ sortedPages copyFrom: 1 to: min]]	ifFalse: [(item < max)		ifTrue: [selectedPages _ sortedPages copyFrom: 1 to: item]		ifFalse: [selectedPages _ sortedPages copyFrom: 1 to: max]]."Create result"return _ WriteStream on: String new."Header"return	nextPutAll: '<table class="changes" border=0 cellpadding=2 cellspacing=0>';	nextPutAll: String crlf;	nextPutAll: '<tr><td class="header"><b>Title</b>&nbsp;&nbsp;</td>'.noTime ifFalse: [return	nextPutAll: '<td class="header"><b>Time</b>&nbsp;&nbsp;</td>'].noDate ifFalse: [return	nextPutAll: '<td class="header" align=right><b>Date</b></td>'].return	nextPutAll: '</tr>';	nextPutAll: String crlf."Rows"bgColor _ 'row1'.selectedPages do: [:page |	request settingsAt: 'bgColor' put: bgColor.	"Remove aliases to allow link action to work"	request		settingsRemove: 'alias';		settingsRemove: 'location'.	return		nextPutAll: '<tr><td class="';		nextPutAll: bgColor;		nextPutAll: '">';		nextPutAll: (book formatPageAction: 'link' request: request response: response shelf: shelf page: page);		nextPutAll: '&nbsp;&nbsp;</td>'.	noTime ifFalse: [return		nextPutAll: '<td class="';		nextPutAll: bgColor;		nextPutAll: '">';		nextPutAll: (book formatPageAction: 'time' request: request response: response shelf: shelf page: page);		nextPutAll: '&nbsp;&nbsp;</td>'].	noDate ifFalse: [return		nextPutAll: '<td class="';		nextPutAll: bgColor;		nextPutAll: '" align=right>';		nextPutAll: (book formatPageAction: 'date' request: request response: response shelf: shelf page: page);		nextPutAll: '</td>'].	return		nextPutAll: '</tr>';		nextPutAll: String crlf.	bgColor _ (bgColor = 'row1') ifTrue: ['row2'] ifFalse: ['row1']].return	nextPutAll: '</table>';	contents
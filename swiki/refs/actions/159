| allSchemeNames myScheme return |myScheme _ (request settingsAt: 'scheme') at: 4.return _ WriteStream on: String new.allSchemeNames _ (book formatPrivAddress: 'allSchemes' request: request response: response shelf: shelf) collect: [:a | a first].allSchemeNames _ allSchemeNames asOrderedCollection.(allSchemeNames includes: (request fieldsKey: 'scheme')) ifFalse: [	"Add this new scheme if it isn't included"	allSchemeNames add: (request fieldsKey: 'scheme')].allSchemeNames _ allSchemeNames asSortedCollection: [:a :b | (a asLowercase) < (b asLowercase)].allSchemeNames do: [:scheme | return	nextPutAll: '<option value="';	nextPutAll: (TextFormatter encodeToStrictXmlCrlf: scheme);	nextPutAll: ((scheme = myScheme)		ifTrue: ['" selected>']		ifFalse: ['">']);	nextPutAll: (TextFormatter encodeToXmlCrlf: scheme);	nextPutAll: String crlf].return contents
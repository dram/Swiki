| users user dir exportUsersModule usersModule newUser |"Find users that have used this site"users _ Set new.book pages do: [:page |	user _ page settingsAt: 'userId' ifAbsent: [nil].	user ifNotNil: [users add: user].	page versions do: [:version |		user _ version settingsAt: 'userId' ifAbsent: [nil].		user ifNotNil: [users add: user]]]."Establish new directory"dir _ book storage dir.(dir directoryExists: 'users') ifFalse: [	dir createDirectory: 'users'].dir _ dir directoryNamed: 'users'.dir fileNames do: [:fName | dir deleteFileNamed: fName].exportUsersModule _ SwikiUsersModule onDir: dir.usersModule _ shelf modulesAt: 'users'."Move users over to export"users do: [:id |	user _ usersModule userAtId: id.	newUser _ exportUsersModule addNewUserNamed: (user name) id: (user internalId).	((user home) = (book name))		ifTrue: ["For owners of the site, keep password"			newUser home: book.			newUser password: user password]		ifFalse: [			(user isOwnerOfBook: book) ifTrue: [newUser isOwnerOfBook: book put: true].			newUser password: (book formatPrivAddress: 'generatePassword' request: request response: response shelf: shelf)].	newUser address: user address.	newUser save]. 
| hasMatch checkForRead |(request fieldsHasKey: 'search')	ifTrue: ["Decrement process priority since it is a search"		Processor activeProcess priority: SwikiModule searchPriority.		response at: 'connection' put: 'close'.		checkForRead _ request security isNil.		[:stream |			"Put Beginning"			stream nextPutAll: (book formatBookTemplate: 'foundBefore' request: request response: response shelf: shelf).			stream flush.			"Put Results"			hasMatch _ false.			book				searchFor: (request fieldsKey: 'search')				forRequest: request				caseSensitive: (request fieldsAsBooleanKey: 'casesensitive')				performAnd: (request fieldsAsBooleanKey: 'and')				matchBlock: [:page |					(checkForRead and: [(book aniAllowViewPage: page) not]) ifFalse: [						hasMatch ifFalse: [							hasMatch _ true.							stream								nextPutAll: (book formatBookTemplate: 'foundMatch' request: request response: response shelf: shelf);								nextPutAll: '<ul>';								nextPutAll: String crlf].						stream							nextPutAll: (book formatPageTemplate: 'searchListing' request: request response: response shelf: shelf page: page);							flush]].			hasMatch				ifTrue: [stream nextPutAll: '</ul>', String crlf]				ifFalse: [stream nextPutAll: (book formatBookTemplate: 'foundNoMatch' request: request response: response shelf: shelf)].			"Put End"			stream nextPutAll: (book formatBookTemplate: 'foundAfter' request: request response: response shelf: shelf)]]	ifFalse: [book formatBookTemplate: 'search' request: request response: response shelf: shelf]
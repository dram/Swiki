| uploads dir |uploads _ (book modulesAt: 'uploads') directoryNamed: page id asString ifAbsent: [nil].uploads ifNotNil: [	dir _ uploads dir.	uploads filesAlphabetically do: [:versions |		(request fieldsKey: versions name ifAbsent: ['keep']) caseOf: {			['move']->["Move to book level"				uploads moveVersions: versions to: (book modulesAt: 'uploads')].			['delete']->["Delete"				versions do: [:version |					dir deleteFileNamed: version name]].			['wipe']->["Wipe"				(versions size > 1) ifTrue: [					(versions copyFrom: 1 to: (versions size - 1)) do: [:version |						dir deleteFileNamed: version name]].				dir rename: versions last name toBe: versions name]}			otherwise: ["Keep: Do Nothing"]].	"Refresh uploads"	uploads initializeFiles]."Send back to the uploadDelete page"response at: 'headerStatus' put: #tempMoved.response at: 'location' put: (request referenceShelf: shelf book: book page: page address: 'upload').book formatPageTemplate: 'uploadDeleteSuccess' request: request response: response shelf: shelf page: page
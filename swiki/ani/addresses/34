| page address |request settingsAt: 'isOwner' put: false.(book modulesAt: 'groups') process: request response: response shelf: shelf book: book.address _ request address.request page	ifNil: [(#('default' 'changes' 'completeChanges' 'help' 'recent' 'search' 'uploads' 'account' 'register' 'remind' 'remindMe' 'signOut' 'siteMap' 'updateAccount' 'updatePreferences' 'getAccess') includes: address)		ifTrue: [book formatBookAddress: address request: request response: response shelf: shelf]		ifFalse: [book pageAlmostNamed: address			forRequest: request			ifThere: [:i | book formatPageTemplate: 'view' request: request response: response shelf: shelf page: i]			ifNot: [response at: 'headerStatus' put: #notFound.				book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]]]	ifNotNil: [(page _ book pages at: (request page) ifAbsent: [nil])		ifNil: ["Page doesn't exist"			response at: 'headerStatus' put: #notFound.			book formatBookTemplate: 'pageNotFound' request: request response: response shelf: shelf]		ifNotNil: [(request canProcessUser: page inBook: book)			ifTrue: [book formatPageAddress: address request: request response: response shelf: shelf page: page]			ifFalse: [address caseOf: {"What if they can add a password or log-in to access"				['default']->[page unaccessableToAll					ifTrue: ["No access"						response at: 'headerStatus' put: #notFound.						book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]					ifFalse: [book formatPageAddress: 'getAccessView' request: request response: response shelf: shelf page: page]].				['edit']->[page uneditableToAll					ifTrue: ["No access"						response at: 'headerStatus' put: #notFound.						book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]					ifFalse: [book formatPageAddress: 'getAccessEdit' request: request response: response shelf: shelf page: page]].				['upload']->[page unuploadableToAll					ifTrue: ["No access"						response at: 'headerStatus' put: #notFound.						book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]					ifFalse: [book formatPageAddress: 'getAccessUpload' request: request response: response shelf: shelf page: page]]}				otherwise: ["No access"					response at: 'headerStatus' put: #notFound.					book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]]]]
| userId isOwner |isOwner _ request settingsAt: 'isOwner'.(request fieldsHasKey: 'text1')	ifTrue: [(page isOlderThan: request)		ifTrue: ["Write Page"			userId _ request security				ifNil: [nil]				ifNotNil: [request security id].			[page				forbidWriting;				clearRefsCache;				time: (Time now);				date: (Date today);				saveFormat: (request text) request: request response: response shelf: shelf book: book;				nameUnique: (request fieldsKey: 'name') book: book;				user: 'unknown'.			userId				ifNil: [page settingsRemove: 'userId']				ifNotNil: [page settingsAt: 'userId' put: userId].			userId ifNotNil: [				"Update alerts, unless it is public"				page setAlerts: request response: response shelf: shelf book: book].			"Update inheritMenu"			(request fieldsAsBooleanKey: 'inheritMenu' ifAbsent: [false])				ifTrue: [page settingsRemove: 'inheritMenu']				ifFalse: [page settingsAt: 'inheritMenu' put: false].			"Update Security: only if you are the owner"			isOwner ifTrue: [				page setAccessControl: request response: response shelf: shelf book: book].			"Update Parent: only if you are the owner"			(isOwner and: [request fieldsHasKey: 'parent']) ifTrue: [				page setParent: request response: response shelf: shelf book: book]] ifError: [:a :b | "Do nothing" ].			[	[page					user: (shelf formatPrivAddress: 'getIPName' request: request response: response);					backup;					write] ifError: [:a :b | "Do nothing" ].				page					permitWriting;					sendAniAlerts: request response: response shelf: shelf book: book] fork.			response at: 'headerStatus' put: #tempMoved.			response at: 'location' put: (request referenceShelf: shelf book: book page: page).			book formatPageTemplate: 'saveSuccess' request: request response: response shelf: shelf page: page]		ifFalse: [isOwner			ifTrue: [book formatPageTemplate: 'editResolveOwner' request: request response: response shelf: shelf page: page]			ifFalse: [book formatPageTemplate: 'editResolve' request: request response: response shelf: shelf page: page]]]	ifFalse: [response at: 'headerStatus' put: #notFound.		book formatBookTemplate: 'addressNotFound' request: request response: response shelf: shelf]
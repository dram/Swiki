| options days max min testDate item prefix postfix coll pages test |"Establish days, max, min, noDate, noTime, noUser"options _ request settingsAt: 'options'.days _ (options includesKey: 'days')	ifTrue: [(options at: 'days') isAllDigits ifTrue: [(options at: 'days') asNumber] ifFalse: [14]]	ifFalse: [14].max _ (options includesKey: 'max')	ifTrue: [(options at: 'max') isAllDigits ifTrue: [(options at: 'max') asNumber] ifFalse: [7]]	ifFalse: [7].min _ (options includesKey: 'min')	ifTrue: [(options at: 'min') isAllDigits ifTrue: [(options at: 'min') asNumber] ifFalse: [2]]	ifFalse: [2].(min = 0) ifTrue: [min _ 1].(max < min) ifTrue: [min _ max].prefix _ ((request settingsAt: 'options') at: 'prefix' ifAbsent: ['']) asString.postfix _ ((request settingsAt: 'options') at: 'postfix' ifAbsent: ['']) asString."Filter pages"coll _ book collDatePagesBlogPrefix: prefix postfix: postfix.(request settingsAt: 'isOwner') ifFalse: ["Include only the linkable pages"	coll _ coll select: [:i | ((i at: 2) accessLevelForRequest: request) > 1]].testDate _ Date today subtractDays: days.item _ 1.[(test _ coll at: item ifAbsent: [nil])	ifNil: [false]	ifNotNil: [(test at: 1) > testDate]] whileTrue: [item _ item + 1].item _ item - 1.pages _ (item < min)	ifTrue: [(coll size < min)		ifTrue: [coll collect: [:i | i at: 2]]		ifFalse: [(coll copyFrom: 1 to: min) collect: [:i | i at: 2]]]	ifFalse: [(item < max)		ifTrue: [(coll copyFrom: 1 to: item) collect: [:i | i at: 2]]		ifFalse: [(coll copyFrom: 1 to: max) collect: [:i | i at: 2]]]."Create result"pages isEmpty	ifTrue: ['']	ifFalse: [String streamContents: [:stream |		stream			nextPutAll: (book formatBookTemplate: 'blogTableTag' request: request response: response shelf: shelf).		pages do: [:page | stream			nextPutAll: (book formatPageTemplate: 'blog' request: request response: response shelf: shelf page: page)].		stream			nextPutAll: '</table>';			nextPutAll: String crlf]]
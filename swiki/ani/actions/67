| colorScheme uploads files uploadServerPath return img ref last radioName bgColor |colorScheme _ book modulesAt: 'colorScheme'.uploads _ book modulesAt: 'uploads'.uploads _ uploads directoryNamed: (page id asString) ifAbsent: [nil]."Sort the files Entries"files _ uploads	ifNil: [OrderedCollection new]	ifNotNil: [uploads filesAlphabetically]."Check for no files present"(files size = 0)	ifTrue: ['0 attachments to the page<br>']	ifFalse: [		bgColor _ 'row1'.		uploadServerPath _ book settingsAt: 'uploadServerPath'.		return _ WriteStream on: (String new: 500).		return			nextPutAll: '<form action="';			nextPutAll: (request referenceShelf: shelf book: book page: page address: 'uploadDeletePage');			nextPutAll: '" method="post">';			nextPutAll: String crlf;			nextPutAll: '<table border=0 cellpadding=2 cellspacing=0>';			nextPutAll: String crlf;			nextPutAll: '<tr><td class="header">&nbsp;</td><td class="header"><b>Name</b></td><td class="header" align=center><b>Action</b></td><td class="header" align=right>&nbsp;&nbsp;<b>Size</b></td><td class="header" align=right>&nbsp;&nbsp;<b>Date</b></td></tr>';			nextPutAll: String crlf.		files do: [:versions |			last _ versions last.			img _ colorScheme mime: (last mimeType copyUpTo: $/) alt: versions strictXmlName.			ref _ uploadServerPath, uploads httpPath, last httpName.			radioName _ versions strictXmlName.			return				nextPutAll: '<tr><td class="';				nextPutAll: bgColor;				nextPutAll: '"><a href="';				nextPutAll: ref;				nextPutAll: '">';				nextPutAll: img;				nextPutAll: '</a></td><td class="';				nextPutAll: bgColor;				nextPutAll: '"><a href="';				nextPutAll: ref;				nextPutAll: '">';				nextPutAll: versions strictXmlName;				nextPutAll: '</a>'.			"Add History"			(versions size = 1) ifFalse: [return				nextPutAll: '&nbsp;(<a href="';				nextPutAll: ref;				nextPutAll: '?history=true">r';				nextPutAll: versions size asString;				nextPutAll: '</a>)'].			return				nextPutAll: '</td><td class="';				nextPutAll: bgColor;				nextPutAll: '"><input type="radio" name="';				nextPutAll: radioName;				nextPutAll: '" value="keep" checked>keep&nbsp;&nbsp;<input type="radio" name="';				nextPutAll: radioName;				nextPutAll: '" value="move">move&#8595;&nbsp;&nbsp;<input type="radio" name="';				nextPutAll: radioName;				nextPutAll: '" value="delete">delete'.			(versions size > 1) ifTrue: [return				nextPutAll: '&nbsp;&nbsp;<input type="radio" name="';				nextPutAll: radioName;				nextPutAll: '" value="wipe">wipe'].			return				nextPutAll: '</td><td class="';				nextPutAll: bgColor;				nextPutAll: '" align=right>&nbsp;&nbsp;';				nextPutAll: last fileSizeInWords;				nextPutAll: '</td><td class="';				nextPutAll: bgColor;				nextPutAll: '" align=right>&nbsp;&nbsp;';				nextPutAll: (NuSwikiPage printDate: last modificationDate);				nextPutAll: '</td></tr>';				nextPutAll: String crlf.			bgColor _ (bgColor = 'row1') ifTrue: ['row2'] ifFalse: ['row1']].		return			nextPutAll: '<tr><td class="header" colspan=5><input type="submit" value="update">';			nextPutAll: String crlf;			nextPutAll: '</table>';			nextPutAll: String crlf;			nextPutAll: '</form>';			contents]
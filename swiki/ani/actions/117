| colorScheme accessLevel |colorScheme _ book modulesAt: 'colorScheme'.String streamContents: [:stream |	stream		nextPutAll: (colorScheme button: 'end').	"show page buttons only if the person could possibly edit as well"	(page accessControl showPageButtonsToRequest: request book: book) ifTrue: [		"view button"		stream			nextPutAll: ((request address = 'default')				ifTrue: [colorScheme button: 'viewie']				ifFalse: [colorScheme button: 'view' link: (request referenceShelf: shelf book: book page: page)]).		"allow things by access level"		accessLevel _ page accessControl accessLevelForRequest: request.		(accessLevel < 3)			ifTrue: [stream				nextPutAll: ((request address = 'edit')					ifTrue: [colorScheme button: 'editlockie']					ifFalse: [colorScheme button: 'editlock' link: (request referenceShelf: shelf book: book page: page address: 'edit')])]			ifFalse: [stream				nextPutAll: ((request address = 'edit')					ifTrue: [colorScheme button: 'editie']					ifFalse: [colorScheme button: 'edit' link: (request referenceShelf: shelf book: book page: page address: 'edit')])].		(accessLevel < 4)			ifTrue: [(page accessControl showUploadLockButtonToRequest: request book: book)				ifTrue: [(request address = 'upload')					ifTrue: [stream nextPutAll: (colorScheme button: 'uploadlockie')]					ifFalse: [stream nextPutAll: (colorScheme button: 'uploadlock' link: (request referenceShelf: shelf book: book page: page address: 'upload'))]]				ifFalse: [stream nextPutAll: (colorScheme button: 'uploadlockbw')]]			ifFalse: [stream				nextPutAll: ((request address = 'upload')					ifTrue: [colorScheme button: 'uploadie']					ifFalse: [colorScheme button: 'upload' link: (request referenceShelf: shelf book: book page: page address: 'upload')])].		(accessLevel < 3)			ifTrue: [stream				nextPutAll: (colorScheme button: 'historybw')]			ifFalse: [stream				nextPutAll: ((request address = 'history')					ifTrue: [colorScheme button: 'historyie']					ifFalse: [colorScheme button: 'history' link: (request referenceShelf: shelf book: book page: page address: 'history')])]].	stream		nextPutAll: (colorScheme button: 'print' link: (request referenceShelf: shelf book: book page: page address: 'print'));		nextPutAll: (colorScheme button: 'spacer').	"Book Buttons"	stream		nextPutAll: ((page id = 1)			ifTrue: [colorScheme button: 'homeie']			ifFalse: [colorScheme button: 'home' link: (request referenceShelf: shelf book: book)]);		nextPutAll: (colorScheme button: 'recent' link: (request referenceShelf: shelf book: book address: 'recent'));		nextPutAll: (colorScheme button: 'search' link: (request referenceShelf: shelf book: book address: 'search'));		nextPutAll: (colorScheme button: 'signin' link: (request referenceShelf: shelf book: book address: 'account'));		nextPutAll: (colorScheme button: 'end')]
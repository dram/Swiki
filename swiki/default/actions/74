| user books home fourth theBook |user _ request settingsAt: 'user'.home _ user home.books _ shelf books asSortedCollection: [:a :b | a name < (b name)].fourth _ ((books size  - 1) // 4) + 1.String streamContents: [:stream |	stream		nextPutAll: '<table border=0 cellpadding=5 cellspacing=0>';		nextPutAll: String crlf;		nextPutAll: '<tr><td bgcolor="#cccccc" colspan=4><b>Ownership</b></td></tr>';		nextPutAll: String crlf;		nextPutAll: '<tr><td colspan=2><em>Home</em><br>(the home Swiki for this user)</td><td colspan=2><select name="home"><option value="- none -"'.	home ifNil: [stream		nextPutAll: ' selected'].	stream		nextPutAll: '">- none -';		nextPutAll: String crlf.	books do: [:book | stream		nextPutAll: '<option value="';		nextPutAll: (TextFormatter encodeToStrictXmlCrlf: book name);		nextPutAll: ((book name = home)			ifTrue: ['" selected>']			ifFalse: ['">']);		nextPutAll: (TextFormatter encodeToXmlCrlf: book name);		nextPutAll: String crlf].	stream		nextPutAll: '</select></td></tr>';		nextPutAll: String crlf;		nextPutAll: '<tr><td colspan=4><em>Owner of ...</em><br>(has owner access for these sites)</td></tr>';		nextPutAll: String crlf.	1 to: fourth do: [:row |		stream			nextPutAll: '<tr>'.		0 to: 3 do: [:col |			theBook _ books at: (row + (col * fourth)) ifAbsent: [nil].			stream				nextPutAll: '<td>'.			theBook				ifNil: [stream nextPutAll: '&nbsp;']				ifNotNil: [stream					nextPutAll: '<input type="checkbox" name="';					nextPutAll: (TextFormatter encodeToStrictXmlCrlf: theBook name);					nextPutAll: '-home" value="true"';					nextPutAll: ((user settingsAt: (theBook name, '-home') ifAbsent: [false])						ifTrue: ['checked>']						ifFalse: ['>']);					nextPutAll: (TextFormatter encodeToXmlCrlf: theBook name)].			stream				nextPutAll: '</td>'].		stream			nextPutAll: '</tr>';			nextPutAll: String crlf].	stream		nextPutAll: '</table>']
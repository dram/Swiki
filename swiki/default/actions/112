| return swikis |"Sort Swikis Alphabetically"swikis _ shelf books asSortedCollection: [:a :b | (a name) < (b name)].return _ WriteStream on: String new.return	nextPutAll: '<table border=0 cellpadding=0 cellspacing=0>';	nextPutAll: String crlf;	nextPutAll: '<tr><td valign=top><input type="checkbox" name="searchall" value="true"'.(request fieldsHasKey: 'searchall') ifTrue: [return	nextPutAll: ' checked'].return	nextPutAll: '>&nbsp;&nbsp;</td><td>search all</td></tr>';	nextPutAll: String crlf.swikis do: [:book | (book setup at: 'visible' ifAbsent: [true])	ifTrue: [((book hasPrivAddress: 'searchable') and: [book formatPrivAddress: 'searchable' request: request response: response shelf: shelf])		ifTrue: [			return				nextPutAll: '<tr><td valign=top><input type="checkbox" name="';				nextPutAll: book showName;				nextPutAll: '" value="true"'.			(request fieldsHasKey: book name) ifTrue: [return				nextPutAll: ' checked'].			return				nextPutAll: '>&nbsp;&nbsp;</td><td>';				nextPutAll: (shelf formatBookTemplate: 'listing' request: request response: response book: book);				nextPutAll: '</td></tr>';				nextPutAll: String crlf]		ifFalse: [return			nextPutAll: '<tr><td>&nbsp;</td><td>';			nextPutAll: (shelf formatBookTemplate: 'listing' request: request response: response book: book);			nextPutAll: '</td></tr>';			nextPutAll: String crlf]]].return nextPutAll: '</table>'.return contents
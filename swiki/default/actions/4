"inheritable, visible, logging, accessible""name=aString description=aString value=aString Or aBoolean values=String, aOrderedCollection, Boolean, nil address=aString or nil"| values value |values _ OrderedCollection new."Inheritance"values add: 'Inheritance'."parent value"value _ Array new: 5.value	at: 1 put: 'parent';	at: 2 put: 'it inherits from';	at: 3 put: (book hasParent ifTrue: [book parent name] ifFalse: ['none']).values add: value."inheritable value"value _ Array new: 5.(book hasChildren)	ifTrue: [value		at: 1 put: 'inheritable';		at: 2 put: 'others can inherit from it';		at: 3 put: true]	ifFalse: [value		at: 1 put: 'inheritable';		at: 2 put: 'others can inherit from it';		at: 3 put: (book setup at: 'inheritable' ifAbsent: [false]);		at: 4 put: Boolean].values add: value."Addressability"values add: 'Addressability'."visible value"value _ Array new: 5.value	at: 1 put: 'visible';	at: 2 put: 'shows on the default (http://mysite.com/) listing';	at: 3 put: (book setup at: 'visible' ifAbsent: [true]);	at: 4 put: Boolean.values add: value."accessible value"value _ Array new: 5.value	at: 1 put: 'accessible';	at: 2 put: 'can be reached while the server is running';	at: 3 put: (book setup at: 'accessible' ifAbsent: [true]);	at: 4 put: Boolean.values add: value.(book hasPrivAddress: 'searchable') ifTrue: [	value _ Array new: 5.	value		at: 1 put: 'searchable';		at: 2 put: 'can be searched from default (http://mysite.com/) listing';		at: 3 put: (book setup at: 'searchable' ifAbsent: [true]);		at: 4 put: Boolean.	values add: value]."Logging"values add: 'Logging'."logging value"value _ Array new: 5.value	at: 1 put: 'logging';	at: 2 put: 'log requests to the site''s or the individual Swiki''s log file';	at: 3 put: (book setup at: 'logging' ifAbsent: ['none']);	at: 4 put: #('none' 'individual' 'site') asOrderedCollection;	at: 5 put: 'initLogFile'.values add: value.values
| users sortBy colorScheme |colorScheme _ shelf modulesAt: 'adminColorScheme'.users _ (shelf modulesAt: 'users') users."Sort by what is specified, if none, then use name"sortBy _ request fieldsKey: 'sortBy' ifAbsent: [nil].users _ sortBy caseOf: {	['nameDown']->[users asSortedCollection: [:a :b |		(a name asLowercase) > (b name asLowercase)]].	['addressUp']->[users asSortedCollection: [:a :b |		((a address asLowercase) = (b address asLowercase))			ifTrue: [(a name asLowercase) < (b name asLowercase)]			ifFalse: [(a address asLowercase) < (b address asLowercase)]]].	['addressDown']->[users asSortedCollection: [:a :b |		((a address asLowercase) = (b address asLowercase))			ifTrue: [(a name asLowercase) < (b name asLowercase)]			ifFalse: [(a address asLowercase) > (b address asLowercase)]]].	['homeUp']->[users asSortedCollection: [:a :b |		((a home) = (b home))			ifTrue: [(a name asLowercase) < (b name asLowercase)]			ifFalse: [a home				ifNil: [false]				ifNotNil: [b home					ifNil: [true]					ifNotNil: [(a home asLowercase) < (b home asLowercase)]]]]].	['homeDown']->[users asSortedCollection: [:a :b |		((a home) = (b home))			ifTrue: [(a name asLowercase) < (b name asLowercase)]			ifFalse: [a home				ifNil: [false]				ifNotNil: [b home					ifNil: [true]					ifNotNil: [(a home asLowercase) > (b home asLowercase)]]]]]}	otherwise: [sortBy _ 'nameUp'.		users asSortedCollection: [:a :b |			(a name asLowercase) < (b name asLowercase)]]."Return a table"String streamContents: [:stream |	"Table Header"	stream		nextPutAll: '<table border=0 cellpadding=5 cellspacing=0>';		nextPutAll: String crlf;		nextPutAll: '<tr><td bgcolor="#cccccc"><b>Name</b>&nbsp;';		nextPutAll: ((sortBy = 'nameDown')			ifTrue: [colorScheme button: 'downArrowie']			ifFalse: [colorScheme button: 'downArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=nameDown')]);		nextPutAll: ((sortBy = 'nameUp')			ifTrue: [colorScheme button: 'upArrowie']			ifFalse: [colorScheme button: 'upArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=nameUp')]);		nextPutAll: '</td><td bgcolor="#cccccc"><b>Address</b>&nbsp;';		nextPutAll: ((sortBy = 'addressDown')			ifTrue: [colorScheme button: 'downArrowie']			ifFalse: [colorScheme button: 'downArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=addressDown')]);		nextPutAll: ((sortBy = 'addressUp')			ifTrue: [colorScheme button: 'upArrowie']			ifFalse: [colorScheme button: 'upArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=addressUp')]);		nextPutAll: '</td><td bgcolor="#cccccc"><b>Home<b>&nbsp';		nextPutAll: ((sortBy = 'homeDown')			ifTrue: [colorScheme button: 'downArrowie']			ifFalse: [colorScheme button: 'downArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=homeDown')]);		nextPutAll: ((sortBy = 'homeUp')			ifTrue: [colorScheme button: 'upArrowie']			ifFalse: [colorScheme button: 'upArrow' link: (request referenceShelf: shelf address: 'admin/users?sortBy=homeUp')]);		nextPutAll: '</td></tr>';		nextPutAll: String crlf.	users do: [:user | stream		nextPutAll: '<tr><td><a href="';		nextPutAll: (request referenceShelf: shelf address: 'admin/user?id=');		nextPutAll: user idAsString;		nextPutAll: '">';		nextPutAll: (TextFormatter encodeToXmlCrlf: user name);		nextPutAll: '</a></td><td>';		nextPutAll: (TextFormatter encodeToXmlCrlf: user address);		nextPutAll: '</td><td>';		nextPutAll: (TextFormatter encodeToXmlCrlf: (user homeIfAbsent: [' ']));		nextPutAll: '</td></tr>';		nextPutAll: String crlf].	"End Table"	stream		nextPutAll: '</table>']
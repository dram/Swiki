| newSecurityModule security member test first second |newSecurityModule _ SwikiSecurityModule new.security _ book formatPrivAddress: 'security' request: request response: response shelf: shelf."Add Default"member _ SwikiSecurityMember new.test _ request fieldsKey: 'default'.security do: [:value | (value class = String) ifFalse: [	((value at: 1) = test) ifTrue: [		member privileges: (value at: 3).		newSecurityModule default: member]]]."Add Other Members"security do: [:value | (value class = String) ifFalse: [	test _ request fieldsKey: (value at: 1).	(test findTokens: String crlf) do: [:line |		(line includes: $:)			ifTrue: ["user:password pair"				first _ line copyUpTo: $:.				second _ (line size > (first size + 1))					ifTrue: [second _ line copyFrom: (first size + 2) to: (line size)]					ifFalse: [''].				member _ SwikiSecurityMember new.				member settingsAt: 'user' put: first.				member settingsAt: 'password' put: second.				member privileges: (value at: 3).				newSecurityModule addMember: member]			ifFalse: [(line includes: $/)				ifTrue: ["Check for ip_number/ip_mask"					first _ line copyUpTo: $/.					second _ line copyAfterLast: $/.					((SwikiSecurityModule isIpString: first) and: [SwikiSecurityModule isIpString: second]) ifTrue: [						member _ SwikiSecurityMember new.						first _ SwikiSecurityModule toIpNumber: first.						second _ SwikiSecurityModule toIpNumber: second.						member settingsAt: 'ip' put: (first bitAnd: second) asString.						member settingsAt: 'mask' put: second asString.						member privileges: (value at: 3).						newSecurityModule addMember: member]]				ifFalse: [(SwikiSecurityModule isIpString: line) ifTrue: [					member _ SwikiSecurityMember new.					member settingsAt: 'ip' put: (SwikiSecurityModule toIpNumber: line) asString.					member privileges: (value at: 3).					newSecurityModule addMember: member]]]]]]."Write to security.xml and save"book forbidWriting.book storage dir deleteFileNamed: 'security.xml' ifAbsent: [].(book storage dir newFileNamed: 'security.xml')	nextPutAll: (newSecurityModule asXml);	close.book modulesAt: 'security' put: newSecurityModule.book permitWriting."Redirect to Success"response	at: 'headerStatus' put: #tempMoved;	at: 'location' put: (request referenceShelf: shelf address: ('admin/security?book=', book name)).shelf formatShelfTemplate: 'location' request: request response: response
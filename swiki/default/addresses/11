"Initialize fileServer"| fileServerPath fileServer fileHistoryServer |fileServerPath _ shelf settingsAt: 'fileServerPath'.fileServer _ SwikiFileServer new.fileServer refFileBlock: [:file :dir :options | '<a href="', fileServerPath, dir httpPath, file last httpName, '">', (options at: 'alias' ifAbsent: [file xmlName]), '</a>'].fileServer refImageBlock: [:file :dir :options | String streamContents: [:stream |	stream		nextPutAll: '<img src="';		nextPutAll: fileServerPath;		nextPutAll: dir httpPath;		nextPutAll: file last httpName;		nextPutAll: '"'.	(options includesKey: 'name') ifTrue: [stream		nextPutAll: ' id="';		nextPutAll: (options at: 'name');		nextPutAll: '" name="';		nextPutAll: (options at: 'name');		nextPut: $"].	(options includesKey: 'title') ifTrue: [stream		nextPutAll: ' title="';		nextPutAll: (options at: 'title');		nextPut: $"].	(options includesKey: 'border') ifTrue: [stream		nextPutAll: ' border=';		nextPutAll: (options at: 'border') asString].	stream		nextPutAll: ' width=';		nextPutAll: file last width asString;		nextPutAll: ' height=';		nextPutAll: file last height asString;		nextPutAll: ' alt="';		nextPutAll: ((options includesKey: 'alt')			ifTrue: [options at: 'alt']			ifFalse: ['Inlined Image:', file strictXmlName]);		nextPutAll: '">']].fileServer refDirectoryBlock: [:dir :options | '<a href="/', dir httpPath, '">', (options at: 'alias' ifAbsent: ['/', dir httpPath]), '</a>'].fileServer refMissingFileBlock: [:fileName :dir :options |	(options includesKey: 'alt')		ifTrue: [TextFormatter decodeFromXmlCrlf: (options at: 'alt')]		ifFalse: ['Missing File (/', dir httpPath, fileName encodeForHTTP, ')']].fileServer serveFileBlock: [:file :dir :options |	(options at: 'response')		at: 'cacheing' put: true;		at: 'contentType' put: file mimeType.	dir readOnlyFile: file].fileServer serveDirectoryBlock: [:dir :options | | file | 	(file _ dir fileRefsCacheAt: 'index.html' ifAbsent: [nil])		ifNil: [			(options at: 'request')				settingsAt: 'dir' put: dir;				settingsAt: 'fs' put: fileServer;				settingsAt: 'prefix' put: '/'.			shelf formatShelfTemplate: 'fileList' request: (options at: 'request') response: (options at: 'response')]		ifNotNil: [			file _ file last.			(options at: 'response')				at: 'cacheing' put: true;				at: 'contentType' put: file mimeType.			dir readOnlyFile: file]].fileServer serveMissingFileBlock: [:path :dir :options | | subDir |	"Check if it is a directory"	(subDir _ dir directoryNamed: path ifAbsent: [nil])		ifNil: ["Not Found"			(options at: 'response') at: 'headerStatus' put: #notFound.			shelf formatShelfTemplate: 'notFound' request: (options at: 'request') response: (options at: 'response')]		ifNotNil: ["Redirect to directory"			(options at: 'response')				at: 'headerStatus' put: #tempMoved;				at: 'location' put: ('/', subDir httpPath).			shelf formatShelfTemplate: 'toDir' request: (options at: 'request') response: (options at: 'response')]].shelf modulesAt: 'fileServer' put: fileServer."File History Server"fileHistoryServer _ SwikiFileServer new.fileHistoryServer refFileBlock: [:file :dir :options | "TODO"].fileHistoryServer serveFileBlock: [:file :dir :options |	| fileRequest fileResponse |	fileResponse _ options at: 'response'.	(fileRequest _ options at: 'request')		settingsAt: 'dir' put: dir;		settingsAt: 'prefix' put: fileServerPath;		settingsAt: 'file' put: file.	(file isAnImage and: [fileRequest fieldsAsBooleanKey: 'show' ifAbsent: [false]])		ifTrue: [shelf formatShelfTemplate: 'fileHistoryShow' request: fileRequest response: fileResponse]		ifFalse: [shelf formatShelfTemplate: 'fileHistory' request: fileRequest response: fileResponse]].fileHistoryServer serveDirectoryBlock: [:dir :options |	(options at: 'response') at: 'headerStatus' put: #notFound.	shelf formatShelfTemplate: 'notFound' request: (options at: 'request') response: (options at: 'response')].fileHistoryServer serveMissingFileBlock: [:path :dir :options |	(options at: 'response') at: 'headerStatus' put: #notFound.	shelf formatShelfTemplate: 'notFound' request: (options at: 'request') response: (options at: 'response')].shelf modulesAt: 'fileHistoryServer' put: fileHistoryServer
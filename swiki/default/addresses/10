"Serve this if an index.html file is not available in /swiki/default/files/"| hasMatch |(shelf settingsAt: 'searchable' ifAbsent: [false])	ifTrue: [(request fieldsHasKey: 'search')		ifTrue: ["Decrement process priority since it is a search"			Processor activeProcess priority: SwikiModule searchPriority.			response at: 'cacheing' put: true.			[:stream |			stream nextPutAll: (shelf formatShelfTemplate: 'foundBefore' request: request response: response).			stream flush.			hasMatch _ false.			(shelf books asSortedCollection: [:a :b | (a name) < (b name)]) do: [:book | (((book hasPrivAddress: 'searchable') and: [book formatPrivAddress: 'searchable' request: request response: response shelf: shelf]) and: [(request fieldsHasKey: 'searchall') or: [request fieldsHasKey: book name]]) ifTrue: [book searchFor: (request fieldsKey: 'search') caseSensitive: (request fieldsAsBooleanKey: 'casesensitive') and: (request fieldsAsBooleanKey: 'and') matchBlock: [:page |				hasMatch ifFalse: [					hasMatch _ true.					stream nextPutAll: (shelf formatShelfTemplate: 'foundMatch' request: request response: response).					stream nextPutAll: '<ul>', String crlf].				stream					nextPutAll: '<li><a href="';					nextPutAll: (request referenceShelf: shelf book: book page: page);					nextPutAll: '">';					nextPutAll: book showName;					nextPutAll: ': ';					nextPutAll: page showName;					nextPutAll: '</a> last edited on ';					nextPutAll: page printDate;					nextPutAll: ' at ';					nextPutAll: page printTime;					nextPutAll: ' by ';					nextPutAll: page user;					nextPutAll: String crlf;					flush]]].			hasMatch				ifTrue: [stream nextPutAll: '</ul>', String crlf]				ifFalse: [stream nextPutAll: (shelf formatShelfTemplate: 'foundNoMatch' request: request response: response)].			stream				nextPutAll: (shelf formatShelfTemplate: 'foundAfter' request: request response: response);				flush]]		ifFalse: [shelf formatShelfTemplate: 'search' request: request response: response]]	ifFalse: [shelf formatShelfTemplate: 'list' request: request response: response]